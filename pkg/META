description = "micro DNS, some domain name system code"
version = "%%VERSION_NUM%%"
requires = "rresult cstruct astring fmt ipaddr logs ptime"
archive(byte) = "udns.cma"
archive(native) = "udns.cmxa"
plugin(byte) = "udns.cma"
plugin(native) = "udns.cmxs"

package "server" (
 version = "%%VERSION_NUM%%"
 description = "Authoritative DNS server"
 requires = "udns randomconv duration"
 archive(byte) = "udns_server.cma"
 plugin(byte) = "udns_server.cma"
 archive(native) = "udns_server.cmxa"
 plugin(native) = "udns_server.cmxs"
 exists_if = "udns_server.cma"
)

package "crypto" (
 version = "%%VERSION_NUM%%"
 description = "Cryptographic support (TSIG) for DNS"
 requires = "udns nocrypto"
 archive(byte) = "udns_crypto.cma"
 plugin(byte) = "udns_crypto.cma"
 archive(native) = "udns_crypto.cmxa"
 plugin(native) = "udns_crypto.cmxs"
 exists_if = "udns_crypto.cma"
)

package "zonefile" (
 version = "%%VERSION_NUM%%"
 description = "DNS zone file parser"
 requires = "udns"
 archive(byte) = "udns_zonefile.cma"
 plugin(byte) = "udns_zonefile.cma"
 archive(native) = "udns_zonefile.cmxa"
 plugin(native) = "udns_zonefile.cmxs"
 exists_if = "udns_zonefile.cma"
)

package "resolver" (
 version = "%%VERSION_NUM%%"
 description = "Recursive DNS resolver"
 requires = "udns udns.server lru duration randomconv"
 archive(byte) = "udns_resolver.cma"
 plugin(byte) = "udns_resolver.cma"
 archive(native) = "udns_resolver.cmxa"
 plugin(native) = "udns_resolver.cmxs"
 exists_if = "udns_resolver.cma"
)

package "mirage" (
 version = "%%VERSION_NUM%%"
 description = "effectful MirageOS DNS layer"
 requires = "udns udns.server udns.resolver mirage-types-lwt lwt duration randomconv"
 archive(byte) = "udns_mirage.cma"
 plugin(byte) = "udns_mirage.cma"
 archive(native) = "udns_mirage.cmxa"
 plugin(native) = "udns_mirage.cmxs"
 exists_if = "udns_mirage.cma"
)
